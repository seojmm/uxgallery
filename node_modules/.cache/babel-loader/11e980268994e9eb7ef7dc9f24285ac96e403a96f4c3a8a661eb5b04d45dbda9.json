{"ast":null,"code":"var _jsxFileName = \"/Users/seojm/development/uxgallery/src/components/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleLogin = e => {\n    const userData = {\n      userId: id,\n      userPassword: password\n    };\n    fetch(\"http://localhost:3000/login\", {\n      //auth 주소에서 받을 예정\n      method: \"post\",\n      headers: {\n        // headers: API 응답에 대한 정보를 담음\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(userData) //userData라는 객체를 보냄\n    }).then(res => res.json()).then(json => {\n      if (json.isLogin === \"True\") {\n        props.setMode(\"WELCOME\");\n      } else {\n        alert(json.isLogin);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n_s(Login, \"q6YKsEiQbB/HjLDjguOyUUblDf0=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","props","_s","id","setId","password","setPassword","handleLogin","e","userData","userId","userPassword","fetch","method","headers","body","JSON","stringify","then","res","json","isLogin","setMode","alert","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seojm/development/uxgallery/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nexport const Login = (props: any) => {\n\tconst [id, setId] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\n\tconst handleLogin = (e: any) => {\n\t\tconst userData = {\n\t\t\tuserId: id,\n\t\t\tuserPassword: password,\n\t\t};\n\t\tfetch(\"http://localhost:3000/login\", {\n\t\t\t//auth 주소에서 받을 예정\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\n\t\t\t\t// headers: API 응답에 대한 정보를 담음\n\t\t\t\t\"content-type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(userData), //userData라는 객체를 보냄\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\tif (json.isLogin === \"True\") {\n\t\t\t\t\tprops.setMode(\"WELCOME\");\n\t\t\t\t} else {\n\t\t\t\t\talert(json.isLogin);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,OAAO,MAAMC,KAAK,GAAIC,KAAU,IAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,WAAW,GAAIC,CAAM,IAAK;IAC/B,MAAMC,QAAQ,GAAG;MAChBC,MAAM,EAAEP,EAAE;MACVQ,YAAY,EAAEN;IACf,CAAC;IACDO,KAAK,CAAC,6BAA6B,EAAE;MACpC;MACAC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACR;QACA,cAAc,EAAE;MACjB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,CAAE;IACjC,CAAC,CAAC,CACAS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEE,IAAI,IAAK;MACf,IAAIA,IAAI,CAACC,OAAO,KAAK,MAAM,EAAE;QAC5BpB,KAAK,CAACqB,OAAO,CAAC,SAAS,CAAC;MACzB,CAAC,MAAM;QACNC,KAAK,CAACH,IAAI,CAACC,OAAO,CAAC;MACpB;IACD,CAAC,CAAC;EACJ,CAAC;EAED,oBACCtB,OAAA;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAER,CAAC;AAACzB,EAAA,CAjCWF,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}